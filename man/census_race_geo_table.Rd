% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/census.R
\name{census_race_geo_table}
\alias{census_race_geo_table}
\title{Download Census Race Data}
\usage{
census_race_geo_table(
  geo = c("us", "state", "county", "zcta", "tract"),
  ...,
  year = 2010,
  survey = c("dec", "acs1", "acs5"),
  GEOIDs = TRUE,
  counts = TRUE
)
}
\arguments{
\item{geo}{The geographic level to return. Common options are listed in the
function signature, but any of the geographies listed at
\code{\link[easycensus:cens_geo]{easycensus::cens_geo()}} may be used.}

\item{...}{Further subgeographies to return, as in \code{\link[easycensus:cens_geo]{easycensus::cens_geo()}}.}

\item{year}{The year for the data}

\item{survey}{The data product to use: either the decennial census (\code{"dec"}),
or the the 1-year or 5-year ACS.}

\item{GEOIDs}{If \code{TRUE}, return the \code{GEOID} column as the unique geographic
identifier; if \code{FALSE}, return a human-readable name. For example, with
\code{geo="state"}, setting \code{GEOIDs=FALSE} will return a column named \code{state}
with entries like \code{"Massachusetts"}.}

\item{counts}{If \code{TRUE}, return the table as actual population counts; if
\code{FALSE}, return table as percentages within each geography.}
}
\value{
A data frame with a geographic identifier column and six columns
\code{pop_white}, \code{pop_black}, etc. containing the counts or proportion of
residents in each racial group.
}
\description{
Downloads and prepares race-by-geography tables from U.S. census data, using
the \code{\link[easycensus:easycensus-package]{easycensus}} package. Requires that an api key
be set up through \code{\link[easycensus:cens_auth]{easycensus::cens_auth()}} in that package. Supports data
from the decennial census and the American Community Survey at a variety of
levels of geographic detail. The output of this function can be used directly
in \code{\link[=bisg]{bisg()}}.
}
\examples{
\dontrun{
census_race_geo_table("us", year=2010)
census_race_geo_table("state", year=2021, survey="acs1")
census_race_geo_table("state", year=2021, survey="acs1", GEOIDs=FALSE)
}
}
