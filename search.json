[{"path":"http://corymccartan.com/birdie/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://corymccartan.com/birdie/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://corymccartan.com/birdie/articles/birdie.html","id":"generating-bisg-probabilities","dir":"Articles","previous_headings":"","what":"Generating BISG probabilities","title":"Estimation of Racial Disparities When Race is Not Observed","text":"first step, can use BISG software, including wru R package. However, birdie provides bisg() function make easy computationally efficient. use bisg(), provide formula labels predictors used. use nm() show variable contains last names, must always provided. ZIP codes states can labeled zip() state(). types geographies can used well—just read documentation bisg(). row r_probs matches row pseudo_vf. ’s important note assuming know overall racial distribution population (registered voters). , provide p_r=p_r argument, gives bisg() overall racial distribution. don’t know overall racial distribution context (even guess better nothing), pass something like national distribution race (conveniently provided p_r_natl()).","code":"r_probs = bisg(~ nm(last_name) + zip(zip), data=pseudo_vf, p_r=p_r) print(r_probs) #> # A tibble: 5,000 × 6 #>    pr_white pr_black  pr_hisp pr_asian  pr_aian pr_other #>       <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1    0.971  0.00517 0.00201  0.000144 0.0136    0.00819 #>  2    0.128  0.860   0.00186  0.000169 0.00104   0.00920 #>  3    0.979  0.00539 0.00436  0.00232  0.000606  0.00837 #>  4    0.521  0.459   0.00535  0.000219 0.00150   0.0124  #>  5    0.989  0.00165 0.00257  0.000319 0.00182   0.00506 #>  6    0.522  0.431   0.0175   0.00125  0.00384   0.0242  #>  7    0.112  0.859   0.0113   0.000720 0.00190   0.0153  #>  8    0.991  0.00794 0.000766 0        0         0       #>  9    0.701  0.283   0.00183  0.000160 0.00136   0.0122  #> 10    0.854  0.133   0.00265  0.000204 0.00241   0.00845 #> # … with 4,990 more rows"},{"path":"http://corymccartan.com/birdie/articles/birdie.html","id":"alternative-race-probabilities","dir":"Articles","previous_headings":"Generating BISG probabilities","what":"Alternative race probabilities","title":"Estimation of Racial Disparities When Race is Not Observed","text":"Rather predicting individual race standard BISG methodology, may want use improved fully Bayesian Surname Improved Geocoding (fBISG) Imai et al. (2022). Compared standard BISG, fBISG accounts measurement error Census counts. improves calibration probabilities (important accurate disparity estimation), also improves accuracy among minority populations. generate fBISG probabilities, birdie provides bisg_me() function, works just like bisg(). Comparing standard BISG probabilities, measurment-error-adjusted probabilities often calibrated. One way see estimate marginal distribution race probabilities. fBISG probabilities much closer actual distribution race data standard BISG probabilities .","code":"r_probs_me = bisg_me(~ nm(last_name) + zip(zip), data=pseudo_vf, p_r=p_r, iter=2000) colMeans(r_probs) #>    pr_white    pr_black     pr_hisp    pr_asian     pr_aian    pr_other  #> 0.656372686 0.277807934 0.032031532 0.010139008 0.009564482 0.014084358 colMeans(r_probs_me) #>  pr_white  pr_black   pr_hisp  pr_asian   pr_aian  pr_other  #> 0.7090623 0.2000669 0.0433066 0.0185961 0.0118845 0.0170836 # actual  p_r #>  #>  white  black   hisp  asian   aian  other  #> 0.7178 0.2078 0.0338 0.0114 0.0102 0.0190"},{"path":"http://corymccartan.com/birdie/articles/birdie.html","id":"why-arent-bisg-probabilities-enough","dir":"Articles","previous_headings":"Generating BISG probabilities","what":"Why aren’t BISG probabilities enough?","title":"Estimation of Racial Disparities When Race is Not Observed","text":"point, many analyses stop. One can threshold BISG probabilities produce single racial prediction every individual. one can use BISG probabilities inside weighted averages weighted regressions. example, try estimate turnout rates race, using BISG probabilities weights: However, discussed methodology paper (McCartan et al. 2023), approach generally biased. Essentially, measures association race turnout mediated names locations. doesn’t properly account ways race associated outcome. BIRDiE methodology addresses problem relying different assumption: names independent outcomes (, turnout) conditional location race. example, among White voters particular ZIP code, assumption mean voters name Smith named Jones equally likely vote.","code":"est_weighted(r_probs, turnout ~ 1, data=pseudo_vf) #> Weighted estimator #> Formula: turnout ~ 1 #>    Data: pseudo_vf #> Number of obs: 5,000; groups: 1 #> Estimated distribution: #>     white black  hisp asian  aian other #> no  0.316 0.335 0.385 0.531 0.502 0.341 #> yes 0.684 0.665 0.615 0.469 0.498 0.659"},{"path":"http://corymccartan.com/birdie/articles/birdie.html","id":"estimating-distributions-by-race","dir":"Articles","previous_headings":"","what":"Estimating distributions by race","title":"Estimation of Racial Disparities When Race is Not Observed","text":"’re now ready estimate turnout race. ’ll use birdie() function, provide formula describing BIRDiE model, including variable interest turnout geography variable zip. , wrap zip proc_zip() function, , among things, recodes missing ZIP codes “” model doesn’t encounter missing data. first argument birdie() r_probs, racial probabilities. birdie knows handle columns came package. use different package, columns may named differently. prefix parameter birdie() lets specify naming convention probabilities.","code":"fit = birdie(r_probs, turnout ~ (1 | proc_zip(zip)), data=pseudo_vf) #> Using default prior for Pr(X | R): #> → Prior scale on fixed effects coefficients: 1.0 #> → Prior mean of random effects standard deviation: 0.20 #> This message is displayed once per session. print(fit) #> Multinomial mixed-effects BIRDiE model #> Formula: turnout ~ (1 | proc_zip(zip)) #>    Data: pseudo_vf #> Number of obs: 5,000; groups: 626 #> Estimated distribution: #>     white black  hisp asian  aian other #> no  0.299 0.363 0.418 0.652 0.698 0.228 #> yes 0.701 0.637 0.582 0.348 0.302 0.772"},{"path":"http://corymccartan.com/birdie/articles/birdie.html","id":"types-of-birdie-models","dir":"Articles","previous_headings":"Estimating distributions by race","what":"Types of BIRDiE Models","title":"Estimation of Racial Disparities When Race is Not Observed","text":"BIRDiE model just fit mixed-effects model. estimates different relationship turnout race every ZIP, partially pools estimates towards common global estimate turnout-race relationship. BIRDiE supports two general types models well: complete-pooling -pooling models. former uses formula like turnout ~ 1 estimates single, global relationship turnout race. model therefore assumes turnout association geography, controlling race. latter model uses formula like turnout ~ proc_zip(zip). model can computationally efficient fit mixed-effects model, perfromance can suffer smaller datasets like one used . recommend mixed-effects model general use.","code":""},{"path":"http://corymccartan.com/birdie/articles/birdie.html","id":"extracting-population-and-small-area-estimates","dir":"Articles","previous_headings":"Estimating distributions by race","what":"Extracting population and small-area estimates","title":"Estimation of Racial Disparities When Race is Not Observed","text":"birdie() function returns object class birdie, supports many additional functions. can quickly extract population turnout-race estimates using coef() tidy(). former produces matrix, latter returns tidy data frame may useful plotting downstream analyses. estimates quite close true distribution turnout race racial groups: estimates suffer smaller racial groups, comprise roughly 1-2% sample can also extract estimates geography (covariates, present model formula) passing subgroup=TRUE either coef() tidy().","code":"tidy(fit) #> # A tibble: 12 × 3 #>    turnout race  estimate #>    <chr>   <chr>    <dbl> #>  1 no      white    0.299 #>  2 yes     white    0.701 #>  3 no      black    0.363 #>  4 yes     black    0.637 #>  5 no      hisp     0.418 #>  6 yes     hisp     0.582 #>  7 no      asian    0.652 #>  8 yes     asian    0.348 #>  9 no      aian     0.698 #> 10 yes     aian     0.302 #> 11 no      other    0.228 #> 12 yes     other    0.772 coef(fit) #>         white     black      hisp     asian      aian     other #> no  0.2993663 0.3630225 0.4180173 0.6515683 0.6975264 0.2282492 #> yes 0.7006337 0.6369775 0.5819827 0.3484317 0.3024736 0.7717508 p_xr # Actual #>       #>           white     black      hisp     asian      aian     other #>   no  0.3014767 0.3570741 0.4142012 0.4385965 0.6666667 0.5894737 #>   yes 0.6985233 0.6429259 0.5857988 0.5614035 0.3333333 0.4105263 head(tidy(fit, subgroup=TRUE)) #> # A tibble: 6 × 4 #>   zip   turnout race  estimate #>   <fct> <chr>   <chr>    <dbl> #> 1 28748 no      white    0.269 #> 2 28748 yes     white    0.731 #> 3 28748 no      black    0.373 #> 4 28748 yes     black    0.627 #> 5 28748 no      hisp     0.411 #> 6 28748 yes     hisp     0.589"},{"path":"http://corymccartan.com/birdie/articles/birdie.html","id":"generating-improved-individual-bisg-probabilities","dir":"Articles","previous_headings":"Estimating distributions by race","what":"Generating improved individual BISG probabilities","title":"Estimation of Racial Disparities When Race is Not Observed","text":"addition producing estimates whole sample specific subgroups, BIRDiE yields improved individual race probabilities. “input” BISG probabilities race given surname location. “output” probabilities BIRDiE race given surname, location, also turnout. outcome variable strongly associated race, BIRDiE-improved probabilities can significantly accurate standard BISG probabilities. Accessing improved probabilities simple fitted() function.","code":"head(fitted(fit)) #> # A tibble: 6 × 6 #>   pr_white pr_black pr_hisp  pr_asian  pr_aian pr_other #>      <dbl>    <dbl>   <dbl>     <dbl>    <dbl>    <dbl> #> 1  0.979    0.00447 0.00164 0.0000702 0.00584   0.00862 #> 2  0.00816  0.986   0.00131 0.000182  0.00120   0.00364 #> 3  0.971    0.00920 0.00480 0.00166   0.000382  0.0129  #> 4  0.525    0.457   0.00413 0.000113  0.000680  0.0138  #> 5  0.984    0.00228 0.00390 0.000761  0.00464   0.00444 #> 6  0.562    0.399   0.0160  0.000495  0.00134   0.0207  plot(r_probs$pr_white, fitted(fit)$pr_white, cex=0.1)"},{"path":"http://corymccartan.com/birdie/articles/birdie.html","id":"bootstrapping-standard-errors","dir":"Articles","previous_headings":"Estimating distributions by race","what":"Bootstrapping standard errors","title":"Estimation of Racial Disparities When Race is Not Observed","text":"One drawback computationally efficient EM algorithm birdie() uses model fitting lack uncertainty quantification. function however support bootstrapping model types. general, recommend bootstrapping simple complete-pooling model understand rough amount sampling variation present. datasets, non-sampling error Census data violations model assumptions cause much bias sampling variance. bootstrap, simply pass nonzero value se_boot birdie(). parameter controls number bootstrap replicates. standard errors accessible $se using vcov() generic.","code":"fit_boot = birdie(r_probs, turnout ~ 1, data=pseudo_vf, se_boot=200) #> Using c(1+ε, 1+ε, ..., 1+ε) prior for Pr(X | R) #> This message is displayed once per session. #> Warning in any(prior$alpha): coercing argument of type 'double' to logical  #> Warning in any(prior$alpha): coercing argument of type 'double' to logical #> Warning in birdie(r_probs, turnout ~ 1, data = pseudo_vf, se_boot = 200): A `prior$alpha` with entries that are not strictly greater than 1 may lead to #> numerical issues.  fit_boot$se #>          white     black       hisp      asian      aian     other #> no  0.01017874 0.0199184 0.05100077 0.09799814 0.1065865 0.3546501 #> yes 0.01017874 0.0199184 0.05100077 0.09799814 0.1065865 0.3546501"},{"path":"http://corymccartan.com/birdie/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory McCartan. Author, maintainer. Kosuke Imai. Contributor. Daniel Ho. Contributor. Jacob Goldin. Contributor. Robin Fisher. Contributor. Stan Development Team. Copyright holder.            include/rstan","code":""},{"path":"http://corymccartan.com/birdie/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCartan C, Goldin J, Ho DE, Imai K (2023). “Estimating Racial Disparities Race Observed.” arXiv preprint arXiv:2303.02580. McCartan C (2023). “birdie: Bayesian Instrumental Regression Disparity Estimation.” https://github.com/CoryMcCartan/birdie.","code":"@Article{mccartan2023race,   title = {Estimating Racial Disparities When Race is Not Observed},   author = {Cory McCartan and Jacob Goldin and Daniel E. Ho and Kosuke Imai},   journal = {arXiv preprint arXiv:2303.02580},   year = {2023}, } @Misc{birdie,   title = {birdie: Bayesian Instrumental Regression for Disparity Estimation},   author = {Cory McCartan},   url = {https://github.com/CoryMcCartan/birdie},   year = {2023}, }"},{"path":"http://corymccartan.com/birdie/index.html","id":"birdie-estimating-disparities-when-race-is-not-observed-","dir":"","previous_headings":"","what":"Bayesian Instrumental Regression for Disparity Estimation","title":"Bayesian Instrumental Regression for Disparity Estimation","text":"Bayesian Instrumental Regression Disparity Estimation (BIRDiE) class Bayesian models accurately estimating conditional distributions race, using Bayesian Improved Surname Geocoding (BISG) probability estimates individual race. package implements BIRDiE described McCartan, Goldin, Ho Imai (2022). also implements standard BISG improved measurement-error BISG model described Imai, Olivella, Rosenman (2022).","code":""},{"path":"http://corymccartan.com/birdie/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Instrumental Regression for Disparity Estimation","text":"can install development version birdie GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"CoryMcCartan/birdie\")"},{"path":"http://corymccartan.com/birdie/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Bayesian Instrumental Regression for Disparity Estimation","text":"basic analysis two steps. First, compute BISG probability estimates bisg() bisg_me() functions. , estimate distribution outcome variable race using birdie() function. compute BISG probabilities, provide last name (optionally) geography variables part formula. Computing regression estimates requires specifying model structure. , ’ll let relationship turnout race vary ZIP code. “-pooling” model McCartan et al. proc_zip() function fills missing ZIP codes, among things. can extract estimated conditional distributions coef(). can also get updated BISG probabilities additionally condition turnout using fitted(). Additional functions allow us extract tidy version estimates (tidy()) visualize estimated distributiosn (plot()).  detailed introduction method software package can found Get Started page.","code":"library(birdie)  data(pseudo_vf)  head(pseudo_vf) #> # A tibble: 6 × 4 #>   last_name zip   race  turnout #>   <fct>     <fct> <fct> <fct>   #> 1 BEAVER    28748 white yes     #> 2 WILLIAMS  28144 black no      #> 3 ROSEN     28270 white yes     #> 4 SMITH     28677 black yes     #> 5 FAY       28748 white no      #> 6 CHURCH    28215 white yes r_probs = bisg(~ nm(last_name) + zip(zip), data=pseudo_vf)  head(r_probs) #> # A tibble: 6 × 6 #>   pr_white pr_black pr_hisp pr_asian  pr_aian pr_other #>      <dbl>    <dbl>   <dbl>    <dbl>    <dbl>    <dbl> #> 1    0.956  0.00371  0.0103 0.000674 0.00886    0.0202 #> 2    0.162  0.795    0.0122 0.00102  0.000873   0.0292 #> 3    0.943  0.00378  0.0218 0.0107   0.000386   0.0202 #> 4    0.569  0.365    0.0302 0.00114  0.00108    0.0339 #> 5    0.971  0.00118  0.0131 0.00149  0.00118    0.0125 #> 6    0.524  0.315    0.0909 0.00598  0.00255    0.0610 fit = birdie(r_probs, turnout ~ proc_zip(zip), data=pseudo_vf) #> Using c(1+ε, 1+ε, ..., 1+ε) prior for Pr(X | R) #> This message is displayed once per session.  print(fit) #> Multinomial-Dirichlet BIRDiE model #> Formula: turnout ~ proc_zip(zip) #>    Data: pseudo_vf #> Number of obs: 5,000; groups: 618 #> Estimated distribution: #>     white black  hisp asian  aian other #> no  0.286 0.358 0.376  0.55 0.644 0.534 #> yes 0.714 0.642 0.624  0.45 0.356 0.466 coef(fit) #>         white     black      hisp     asian      aian     other #> no  0.2855931 0.3583592 0.3761561 0.5501976 0.6443233 0.5341151 #> yes 0.7144069 0.6416408 0.6238439 0.4498024 0.3556767 0.4658849  head(fitted(fit)) #> # A tibble: 6 × 6 #>   pr_white pr_black  pr_hisp pr_asian  pr_aian pr_other #>      <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1 9.46e- 1 3.68e-15 1.41e- 2 3.81e-14 1.21e- 2 2.77e- 2 #> 2 2.77e-15 9.99e- 1 5.45e-15 5.35e-15 1.25e- 3 1.99e-14 #> 3 9.52e- 1 7.52e- 3 7.34e-15 4.13e-16 1.95e-14 4.01e- 2 #> 4 6.18e- 1 3.81e- 1 3.54e-15 3.26e-13 1.56e- 3 3.02e-13 #> 5 9.90e- 1 4.33e- 3 3.00e-11 5.48e- 3 1.10e-14 1.83e-13 #> 6 5.63e- 1 2.65e- 1 9.76e- 2 6.42e- 3 2.74e- 3 6.55e- 2  tidy(fit) #> # A tibble: 12 × 3 #>    turnout race  estimate #>    <chr>   <chr>    <dbl> #>  1 no      white    0.286 #>  2 yes     white    0.714 #>  3 no      black    0.358 #>  4 yes     black    0.642 #>  5 no      hisp     0.376 #>  6 yes     hisp     0.624 #>  7 no      asian    0.550 #>  8 yes     asian    0.450 #>  9 no      aian     0.644 #> 10 yes     aian     0.356 #> 11 no      other    0.534 #> 12 yes     other    0.466  plot(fit)"},{"path":"http://corymccartan.com/birdie/reference/birdie-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"output birdie() object class birdie, supports many generic functions. Notably coef.birdie() returns main model estimates outcome given race, fitted.birdie() returns table analogous output bisg() updated race probabilities.","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class ","text":"","code":"# S3 method for birdie coef(object, subgroup = FALSE, ...)  # S3 method for birdie fitted(object, ...)  # S3 method for birdie residuals(object, x_only = FALSE, ...)  # S3 method for birdie predict(object, adj = NULL, ...)  # S3 method for birdie simulate(object, nsim = 1, seed = NULL, ...)  # S3 method for birdie plot(x, log = FALSE, ...)  # S3 method for birdie tidy(x, subgroup = FALSE, ...)  # S3 method for birdie glance(x, ...)  # S3 method for birdie augment(x, data, ...)  # S3 method for birdie formula(x, ...)  # S3 method for birdie nobs(object, ...)  # S3 method for birdie vcov(object, ...)  # S3 method for birdie print(x, ...)  # S3 method for birdie summary(object, ...)"},{"path":"http://corymccartan.com/birdie/reference/birdie-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class ","text":"object, x birdie model object subgroup TRUE, return subgroup-level (rather marginal) coefficient estimates 3D array. ... Potentially arguments passed methods x_only TRUE, calculate fitted values using covariates (.e., without using surnames). adj point simplex describes BISG probabilities thresholded produce point predictions. probabilities divied adj, racial category highest probability predicted. Can used trade types prediction error. Must nonnegative normalized sum 1. default make adjustment. nsim number vectors simulate. Defaults 1. seed Used seed random number generator. See stats::simulate(). log TRUE, plot estimated probabilities log scale. data data frame augment Pr(R | Y, X, S) probabilities","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class ","text":"internal structure birdie objects designed accessed directly. generics listed used instead.","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie-class.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Class ","text":"coef(birdie): Return estimated outcome-given-race distributions. fitted(birdie): Return updated race probability table. bisg() estimates Pr(R | G, X, S); table estimates Pr(R | Y, G, X, S). residuals(birdie): Return residuals outcome variable. Useful sensitivity analyses get idea well race, location, names, etc. predict outcome. predict(birdie): Create point predictions individual race. Returns factor vector individual race labels. Strongly recommended kind inferential purpose, biases may extreme unpredictable directions. simulate(birdie): Simulate race posterior distribution Pr(R | Y, G, X, S, Theta-MAP). account uncertainty model parameters. plot(birdie): Visualize estimated conditional distributions BIRDiE model. tidy(birdie): Put BIRDiE model coefficients tidy format. glance(birdie): Glance BIRDiE model. augment(birdie): Augment data individual race predictions BIRDiE model. formula(birdie): Extract formula used specify BIRDiE model. nobs(birdie): Return number observations used fit BIRDiE model. vcov(birdie): Return estimated variance-covariance matrix BIRDiE model estimates, available. print(birdie): Print summary model fit. summary(birdie): Print detailed summary model fit.","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"methods(class=\"birdie\") #>  [1] augment   coef      fitted    formula   glance    nobs      plot      #>  [8] predict   print     residuals simulate  summary   tidy      vcov      #> see '?methods' for accessing help and source code"},{"path":"http://corymccartan.com/birdie/reference/birdie-package.html","id":null,"dir":"Reference","previous_headings":"","what":"birdie: Bayesian Instrumental Regression for Disparity Estimation — birdie-package","title":"birdie: Bayesian Instrumental Regression for Disparity Estimation — birdie-package","text":"Bayesian models accurately estimating conditional distributions race, using Bayesian Improved Surname Geocoding (BISG) probability estimates individual race. Implements methods described McCartan, Goldin, Ho Imai (2023) arXiv:2303.02580.","code":""},{"path":[]},{"path":"http://corymccartan.com/birdie/reference/birdie-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"birdie: Bayesian Instrumental Regression for Disparity Estimation — birdie-package","text":"Maintainer: Cory McCartan cmccartan@g.harvard.edu contributors: Kosuke Imai imai@harvard.edu [contributor] Daniel Ho dho@law.stanford.edu [contributor] Jacob Goldin jsgoldin@uchicago.edu [contributor] Robin Fisher robin.fisher@treasury.gov [contributor] Stan Development Team (include/rstan) [copyright holder]","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.ctrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Control of BIRDiE Model Fitting — birdie.ctrl","title":"Control of BIRDiE Model Fitting — birdie.ctrl","text":"Constructs control parameters BIRDiE model fitting. arguments defaults.","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.ctrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control of BIRDiE Model Fitting — birdie.ctrl","text":"","code":"birdie.ctrl(   max_iter = 1000,   accel = c(\"squarem\", \"anderson\", \"daarem\", \"none\"),   order = switch(match.arg(accel), none = 0L, anderson = -1L, daarem = -1L, squarem = 1L),   anderson_restart = TRUE,   abstol = 1e-06,   reltol = 1e-06 )"},{"path":"http://corymccartan.com/birdie/reference/birdie.ctrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control of BIRDiE Model Fitting — birdie.ctrl","text":"max_iter maximum number EM iterations. accel acceleration algorithm use EM. default \"squarem\" good purposes, though \"anderson\" may faster parameters tight tolerances. \"daarem\" excellent choice well works across range problems, though requires installing small daarem package. \"none\" recommended unless algorithms running numerical issues. See references details schemes. order order use acceleration algorithm. Interpretation varies algorithm. Can range 1 (default) 3 SQUAREM 1 number parameters Anderson DAAREM (default -1 allows order determined problem size). anderson_restart Whether use restarts Anderson acceleration. abstol absolute tolerance used checking convergence. reltol relative tolerance used checking convergence. Ignored accel = \"squarem\" \"daarem\".","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.ctrl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control of BIRDiE Model Fitting — birdie.ctrl","text":"list containing control parameters.","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.ctrl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Control of BIRDiE Model Fitting — birdie.ctrl","text":"Varadhan, R., & Roland, C. (2004). Squared extrapolation methods (SQUAREM): new class simple efficient numerical schemes accelerating convergence EM algorithm. Walker, H. F., & Ni, P. (2011). Anderson acceleration fixed-point iterations. SIAM Journal Numerical Analysis, 49(4), 1715-1735. Henderson, N. C., & Varadhan, R. (2019). Damped Anderson acceleration restarts monotonicity control accelerating EM EM-like algorithms. Journal Computational Graphical Statistics, 28(4), 834-846.","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.ctrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control of BIRDiE Model Fitting — birdie.ctrl","text":"","code":"birdie.ctrl(max_iter=1000) #> $max_iter #> [1] 1000 #>  #> $accel #> function (init, em_step, ctrl, n_x = 1, ...)  #> { #>     squarem_method = if (ctrl$order == 1)  #>         3 #>     else \"rre\" #>     incr_factor = n_x^(1/2) #>     res = SQUAREM::squarem(init, em_step, control = list(K = ctrl$order,  #>         method = squarem_method, minimize = TRUE, square = TRUE,  #>         step.min0 = 0.5, step.max0 = 1, mstep = 4, objfn.inc = 1,  #>         kr = 1, tol = ctrl$abstol * incr_factor, maxiter = ctrl$max_iter,  #>         trace = FALSE, intermed = FALSE)) #>     list(ests = res$par, iters = res$fpeval, converge = res$convergence) #> } #> <bytecode: 0x55994bcdeb58> #> <environment: namespace:birdie> #>  #> $order #> [1] 1 #>  #> $restart #> [1] TRUE #>  #> $abstol #> [1] 1e-06 #>  #> $reltol #> [1] 1e-06 #>"},{"path":"http://corymccartan.com/birdie/reference/birdie.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit BIRDiE Models — birdie","title":"Fit BIRDiE Models — birdie","text":"Fits one two possible Bayesian Instrumental Regression Disparity Estimation (BIRDiE) models BISG probabilities covariates. simplest Multinomial-Dirichlet model (dir) appropriate covariates covariates discrete fully interacted another. general Multinomial mixed-effects model (mmm) supports number fixed effects one random intercept.","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit BIRDiE Models — birdie","text":"","code":"birdie(   r_probs,   formula,   data = NULL,   model = c(\"auto\", \"dir\", \"mmm\"),   prior = NULL,   prefix = \"pr_\",   se_boot = 0,   ctrl = birdie.ctrl() )"},{"path":"http://corymccartan.com/birdie/reference/birdie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit BIRDiE Models — birdie","text":"r_probs data frame matrix BISG probabilities, one row per individual. output bisg() can used directly . formula two-sided formula object describing model structure. left-hand side outcome variable, must discrete. single random intercept term, denoted vertical bar (\"(1 | <term>)\"), supported right-hand side. data optional data frame containing variables named formula. model string specifying type model fit: either \"dir\" Multinomial-Dirichlet model \"mmm\" Multinomial mixed-effects model. default, \"auto\", select computationally efficient model available: \"dir\" formula covariates fully-interacted structure, \"mmm\" otherwise. details model specifications can found \"Details\" section . prior list entries specifying model prior. model=\"dir\" entry alpha, matrix Dirichlet hyperparameters. matrix one row every level outcome variable one column every racial group. default prior matrix entries set \\(1+\\epsilon\\). model=\"mmm\", prior list contain two scalar entries: scale_beta, standard deviation Normal prior fixed effects, scale_sigma, prior mean standard deviation random intercepts. prefix r_probs data frame, columns containing racial probabilities selected names starting prefix. default work output bisg(). se_boot number bootstrap replicates use compute approximate standard errors main model estimates. available model=\"dir\". fewer 1,000 individuals 100 fewer replicates, Bayesian bootstrap used instead (.e., weights drawn \\(\\text{Dirichlet}(1, 1, ..., 1)\\) distribution, produces reliable estimates. ctrl list containing control parameters EM algorithm optimization routines. list proper format can made using birdie.ctrl().","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit BIRDiE Models — birdie","text":"object class birdie, many methods available. model estimates may accessed coef.birdie(), updated BISG probabilities (conditioning outcome) may accessed fitted.birdie().","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit BIRDiE Models — birdie","text":"birdie() uses expectation-maximization (EM) routine find maximum posteriori (MAP) estimate specified model. Asymptotic variance-covariance matrices MAP estimate available Multinomial-Dirichlet model via bootstrapping (se_boot). Multinomial-Dirichlet model specified follows: $$     Y_i \\mid R_i, X_i, \\Theta \\sim \\text{Categorical}(\\theta_{R_iX_i}) \\\\     \\theta_{rx} \\sim \\text{Dirichlet}(\\alpha_r), $$ \\(Y\\) outcome variable, \\(R\\) race, \\(X\\) covariates (fixed effects), \\(\\theta_{rx}\\) \\(\\alpha_r\\) vectors length matching number levels outcome variable. one vector \\(\\theta_{rx}\\) every combination race covariates, hence need formula either covariates fully interacted structure. Multinomial mixed-effects model specified follows: $$     Y_i \\mid R_i, X_i, \\Theta \\sim \\text{Categorical}(g^{-1}(\\mu_{R_iX_i})) \\\\     \\mu_{rxy} = W\\beta_{ry} + Zu_{ry} \\\\     u_{ry} \\mid \\sigma^2_{ry} \\sim \\mathcal{N}(0, \\sigma^2_{ry}) \\\\     \\beta_{ry} \\sim \\mathcal{N}(0, s_\\beta) \\\\     \\sigma_{ry} \\sim \\text{Gamma}(2, 2/s_\\sigma), $$ \\(\\beta_{ry}\\) fixed effects, \\(u_{ry}\\) random intercept, \\(g\\) softmax link function. details models properties may found paper referenced .","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit BIRDiE Models — birdie","text":"McCartan, C., Goldin, J., Ho, D.E., & Imai, K. (2022). Estimating Racial Disparities Race Observed. Available https://arxiv.org/abs/2303.02580.","code":""},{"path":"http://corymccartan.com/birdie/reference/birdie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit BIRDiE Models — birdie","text":"","code":"data(pseudo_vf)  r_probs = bisg(~ nm(last_name) + zip(zip), data=pseudo_vf)  # Process zip codes to remove missing values pseudo_vf$zip = proc_zip(pseudo_vf$zip)  birdie(r_probs, turnout ~ 1, data=pseudo_vf) #> Using c(1+ε, 1+ε, ..., 1+ε) prior for Pr(X | R) #> This message is displayed once per session. #> Warning: coercing argument of type 'double' to logical #> Warning: coercing argument of type 'double' to logical #> Warning: A `prior$alpha` with entries that are not strictly greater than 1 may lead to #> numerical issues. #> Multinomial-Dirichlet BIRDiE model #> Formula: turnout ~ 1 #>    Data: pseudo_vf #> Number of obs: 5,000; groups: 1 #> Estimated distribution: #>     white black  hisp asian  aian other #> no  0.301 0.358 0.392 0.613 0.778 0.254 #> yes 0.699 0.642 0.608 0.387 0.222 0.746  birdie(r_probs, turnout ~ zip, data=pseudo_vf) #> Warning: coercing argument of type 'double' to logical #> Warning: coercing argument of type 'double' to logical #> Warning: A `prior$alpha` with entries that are not strictly greater than 1 may lead to #> numerical issues. #> Multinomial-Dirichlet BIRDiE model #> Formula: turnout ~ zip #>    Data: pseudo_vf #> Number of obs: 5,000; groups: 618 #> Estimated distribution: #>     white black  hisp asian  aian other #> no  0.286 0.358 0.376  0.55 0.644 0.534 #> yes 0.714 0.642 0.624  0.45 0.356 0.466  fit = birdie(r_probs, turnout ~ (1 | zip), data=pseudo_vf,        ctrl=birdie.ctrl(abstol=1e-3)) #> Using default prior for Pr(X | R): #> → Prior scale on fixed effects coefficients: 1.0 #> → Prior mean of random effects standard deviation: 0.20 #> This message is displayed once per session.  summary(fit) #> Multinomial mixed-effects BIRDiE model #> Formula: turnout ~ (1 | zip) #>    Data: pseudo_vf #>  #> 6 iterations and 0.29 secs to convergence #>  #> Number of observations: 5,000 #> Number of groups: 618 #>  #> Entropy decrease from marginal race distribution: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> -0.4887  0.1460  0.3991  0.4117  0.7144  1.0568  #> Entropy decrease from BISG probabilities: #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #> -0.68767 -0.01394  0.03638  0.04472  0.09864  0.58286  #>  #> Estimated outcome-by-race distribution: #>     white black  hisp asian  aian other #> no  0.301 0.364 0.371 0.603 0.701 0.266 #> yes 0.699 0.636 0.629 0.397 0.299 0.734 coef(fit) #>         white     black      hisp    asian      aian    other #> no  0.3014152 0.3639849 0.3714893 0.603295 0.7005173 0.265966 #> yes 0.6985848 0.6360151 0.6285107 0.396705 0.2994827 0.734034 fitted(fit) #> # A tibble: 5,000 × 6 #>    pr_white pr_black pr_hisp pr_asian  pr_aian pr_other #>       <dbl>    <dbl>   <dbl>    <dbl>    <dbl>    <dbl> #>  1   0.962   0.00332 0.0103  0.000372 0.00399    0.0202 #>  2   0.0156  0.962   0.00685 0.00100  0.000964   0.0132 #>  3   0.941   0.00571 0.0173  0.00804  0.000239   0.0278 #>  4   0.579   0.364   0.0201  0.000657 0.000510   0.0355 #>  5   0.967   0.00152 0.0129  0.00328  0.00292    0.0126 #>  6   0.560   0.295   0.0909  0.00270  0.000940   0.0500 #>  7   0.134   0.749   0.0637  0.00244  0.000730   0.0495 #>  8   0.965   0.00418 0.0311  0        0          0      #>  9   0.756   0.212   0.00696 0.000334 0.000321   0.0243 #> 10   0.886   0.0864  0.0103  0.000410 0.000550   0.0162 #> # … with 4,990 more rows"},{"path":"http://corymccartan.com/birdie/reference/bisg.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Improved Surname Geocoding (BISG) — bisg","title":"Bayesian Improved Surname Geocoding (BISG) — bisg","text":"Calculates individual probabilities belonging racial groups given last name, location, covariates (optional). standard function bisg() treats input tables fixed. alternative function bisg_me(), assumes input tables subject measurement error, uses Gibbs sampler impute individual race probabilities, using model Imai et al. (2022).","code":""},{"path":"http://corymccartan.com/birdie/reference/bisg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Improved Surname Geocoding (BISG) — bisg","text":"","code":"bisg(   formula,   data = NULL,   p_r = p_r_natl(),   p_rgx = NULL,   p_rs = NULL,   save_rgx = TRUE )  bisg_me(   formula,   data = NULL,   p_r = p_r_natl(),   p_rgx = NULL,   p_rs = NULL,   iter = 1000,   warmup = 100,   cores = 1L )  # S3 method for bisg summary(object, p_r = NULL, ...)  # S3 method for bisg predict(object, adj = NULL, ...)"},{"path":"http://corymccartan.com/birdie/reference/bisg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Improved Surname Geocoding (BISG) — bisg","text":"formula formula specifying BISG model. Must include special term nm() identify surname variable. Certain geographic variables can identified similarly: zip() ZIP codes, state() states. predictor variables provided, bisg() automatically able build table census data use inference. predictor variables included, geographic identifiers used, user must specify p_rgx argument . left-hand side formula ignored. See examples section sample formulas. data data frame containing variables formula. p_r prior distribution race sample, numeric vector. Defaults U.S. demographics provided p_r_natl(). Can also set p_r=\"est\" \"estimate\" estimate geographic distribution.  Since prior distribution race strongly affects calibration BISG probabilities thus accuracy downstream estimates, users encouraged think carefully appropriate value p_r.  prior information racial makeup sample available, yet sample different overall U.S. population, p_r=\"estimate\" likely produce superior results. p_rgx distribution race given location (G) covariates (X) specified formula. provided data frame, columns matching predictors formula, additional columns racial group containing conditional probability racial group given predictors. example, Census tracts predictors, p_rgx data frame tract column columns white, black, etc. containing racial distribution tract. formula contains labeled terms (like zip()), default p_rgx constructed automatically recent Census data. table normalized row, can provided population counts well. Counts required bisg_me(). census_race_geo_table() function can helpful prepare tables, can build_dec() build_acs() functions censable package. p_rs distribution race given last name. p_rgx, provided data frame, column names additional columns racial group. Users specify argument cases, table built published Census surname tables automatically. Counts required bisg_me(). save_rgx TRUE, save p_rgx table (matched individual) \"p_rgx\" \"gx\" attributes output. Necessary sensitivity analyses. iter many sampling iterations Gibbs sampler warmup many burn-iterations Gibbs sampler cores many parallel cores use computation. Around 4 seems optimal, even available. object object class bisg, result running bisg(). ... Additional arguments generic methods (ignored). adj point simplex describes BISG probabilities thresholded produce point predictions. probabilities divied adj, racial category highest probability predicted. Can used trade types prediction error. Must nonnegative normalized sum 1. default make adjustment.","code":""},{"path":"http://corymccartan.com/birdie/reference/bisg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Improved Surname Geocoding (BISG) — bisg","text":"object class bisg, just data frame additional attributes. data frame rows matching input data columns race probabilities.","code":""},{"path":"http://corymccartan.com/birdie/reference/bisg.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Bayesian Improved Surname Geocoding (BISG) — bisg","text":"summary(bisg): Summarize predicted race probabilities. Returns vector individual entropies. predict(bisg): Create point predictions individual race. Returns factor vector individual race labels. Strongly recommended kind inferential purpose, biases may extreme unpredictable directions.","code":""},{"path":"http://corymccartan.com/birdie/reference/bisg.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Bayesian Improved Surname Geocoding (BISG) — bisg","text":"bisg(): standard BISG model. bisg_me(): measurement error BISG model.","code":""},{"path":"http://corymccartan.com/birdie/reference/bisg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian Improved Surname Geocoding (BISG) — bisg","text":"Elliott, M. N., Fremont, ., Morrison, P. ., Pantoja, P., Lurie, N. (2008). new method estimating race/ethnicity associated disparities administrative records lack self-reported race/ethnicity. Health Services Research, 43(5p1):1722–1736. Fiscella, K. Fremont, . M. (2006). Use geocoding surname analysis estimate race ethnicity. Health Services Research, 41(4p1):1482–1500. Imai, K., Olivella, S., & Rosenman, E. T. (2022). Addressing census data problems race imputation via fully Bayesian Improved Surname Geocoding name supplements. Science Advances, 8(49), eadc9824.","code":""},{"path":"http://corymccartan.com/birdie/reference/bisg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Improved Surname Geocoding (BISG) — bisg","text":"","code":"data(pseudo_vf) bisg(~ nm(last_name), data=pseudo_vf) #> # A tibble: 5,000 × 6 #>    pr_white pr_black pr_hisp pr_asian pr_aian pr_other #>       <dbl>    <dbl>   <dbl>    <dbl>   <dbl>    <dbl> #>  1    0.826  0.0701   0.0305  0.00353 0.0208    0.0491 #>  2    0.362  0.547    0.0298  0.00315 0.00454   0.0533 #>  3    0.918  0.00887  0.0397  0.00697 0.00223   0.0240 #>  4    0.620  0.293    0.0317  0.00379 0.00545   0.0460 #>  5    0.892  0.0237   0.0413  0.00831 0.00295   0.0322 #>  6    0.844  0.0790   0.0309  0.00384 0.00542   0.0370 #>  7    0.491  0.419    0.0297  0.00390 0.00548   0.0512 #>  8    0.982  0.00574  0.0120  0       0         0      #>  9    0.713  0.194    0.0319  0.00422 0.00695   0.0497 #> 10    0.593  0.337    0.0262  0.00278 0.00406   0.0368 #> # … with 4,990 more rows  r_probs = bisg(~ nm(last_name) + zip(zip), data=pseudo_vf) summary(r_probs) #> BISG individual race probabilities #>  #> Implied marginal race distribution: #> pr_white pr_black  pr_hisp pr_asian  pr_aian pr_other  #>    0.641    0.215    0.074    0.020    0.007    0.043  #>  #> Entropy decrease from marginal distribution: #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> -0.5137  0.1193  0.3315  0.3665  0.6386  1.0563  head(predict(r_probs)) #> [1] white black white white white white #> Levels: white black hisp asian aian other  data(pseudo_vf) bisg_me(~ nm(last_name) + zip(zip), data=pseudo_vf) #> # A tibble: 5,000 × 6 #>    pr_white pr_black pr_hisp pr_asian pr_aian pr_other #>       <dbl>    <dbl>   <dbl>    <dbl>   <dbl>    <dbl> #>  1    0.964   0.001   0.007     0       0.015   0.013  #>  2    0.222   0.754   0.009     0.001   0.002   0.012  #>  3    0.976   0.006   0.006     0.005   0       0.007  #>  4    0.640   0.319   0.0190    0       0.004   0.0180 #>  5    0.985   0.001   0.005     0.001   0.002   0.006  #>  6    0.622   0.285   0.0400    0.009   0.009   0.0350 #>  7    0.208   0.730   0.0280    0.007   0.004   0.023  #>  8    0.991   0.001   0.007     0.001   0       0      #>  9    0.811   0.172   0.004     0.001   0.002   0.01   #> 10    0.914   0.0680  0         0.002   0.006   0.01   #> # … with 4,990 more rows"},{"path":"http://corymccartan.com/birdie/reference/census_race_geo_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Census Race Data — census_race_geo_table","title":"Download Census Race Data — census_race_geo_table","text":"Downloads prepares race--geography tables U.S. census data, using easycensus package. Requires api key set easycensus::cens_auth() package. Supports data decennial census American Community Survey variety levels geographic detail. output function can used directly bisg().","code":""},{"path":"http://corymccartan.com/birdie/reference/census_race_geo_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Census Race Data — census_race_geo_table","text":"","code":"census_race_geo_table(   geo = c(\"us\", \"state\", \"county\", \"zcta\", \"tract\"),   ...,   year = 2010,   survey = c(\"dec\", \"acs1\", \"acs5\"),   GEOIDs = TRUE,   counts = TRUE )"},{"path":"http://corymccartan.com/birdie/reference/census_race_geo_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Census Race Data — census_race_geo_table","text":"geo geographic level return. Common options listed function signature, geographies listed easycensus::cens_geo() may used. ... subgeographies return, easycensus::cens_geo(). year year data survey data product use: either decennial census (\"dec\"), 1-year 5-year ACS. GEOIDs TRUE, return GEOID column unique geographic identifier; FALSE, return human-readable name. example, geo=\"state\", setting GEOIDs=FALSE return column named state entries like \"Massachusetts\". counts TRUE, return table actual population counts; FALSE, return table percentages within geography.","code":""},{"path":"http://corymccartan.com/birdie/reference/census_race_geo_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Census Race Data — census_race_geo_table","text":"data frame geographic identifier column(s) six columns white, black, etc. containing counts proportion residents racial group.","code":""},{"path":"http://corymccartan.com/birdie/reference/census_race_geo_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Census Race Data — census_race_geo_table","text":"","code":"if (FALSE) { census_race_geo_table(\"us\", year=2010) census_race_geo_table(\"state\", year=2021, survey=\"acs1\") census_race_geo_table(\"state\", year=2021, survey=\"acs1\", GEOIDs=FALSE) }"},{"path":"http://corymccartan.com/birdie/reference/disparities.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Racial Disparities from Model Estimates — disparities","title":"Compute Racial Disparities from Model Estimates — disparities","text":"function lets easily compute differences conditional expectations pairs specified racial groups.","code":""},{"path":"http://corymccartan.com/birdie/reference/disparities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Racial Disparities from Model Estimates — disparities","text":"","code":"disparities(x, subgroup = FALSE, races = TRUE)"},{"path":"http://corymccartan.com/birdie/reference/disparities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Racial Disparities from Model Estimates — disparities","text":"x birdie model object. subgroup TRUE, return subgroup-level (rather marginal) disparity estimates. races character vector racial groups compute disparities . special value TRUE, default, computes disparities racial groups.","code":""},{"path":"http://corymccartan.com/birdie/reference/disparities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Racial Disparities from Model Estimates — disparities","text":"data frame containing row every possible disparity specified races, identified columns race_1 race_2. reported disparity estimate_1 - estimate_2.","code":""},{"path":"http://corymccartan.com/birdie/reference/disparities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Racial Disparities from Model Estimates — disparities","text":"","code":"data(pseudo_vf) r_probs = bisg(~ nm(last_name) + zip(zip), data=pseudo_vf) fit = birdie(r_probs, turnout ~ 1, data=pseudo_vf) #> Warning: coercing argument of type 'double' to logical #> Warning: coercing argument of type 'double' to logical #> Warning: A `prior$alpha` with entries that are not strictly greater than 1 may lead to #> numerical issues.  disparities(fit) #> # A tibble: 60 × 6 #>    race_1 race_2 turnout estimate_1 estimate_2 disparity #>    <chr>  <chr>  <chr>        <dbl>      <dbl>     <dbl> #>  1 black  white  no           0.358      0.301    0.0573 #>  2 black  white  yes          0.642      0.699   -0.0573 #>  3 hisp   white  no           0.392      0.301    0.0908 #>  4 hisp   white  yes          0.608      0.699   -0.0908 #>  5 asian  white  no           0.613      0.301    0.312  #>  6 asian  white  yes          0.387      0.699   -0.312  #>  7 aian   white  no           0.778      0.301    0.477  #>  8 aian   white  yes          0.222      0.699   -0.477  #>  9 other  white  no           0.254      0.301   -0.0468 #> 10 other  white  yes          0.746      0.699    0.0468 #> # … with 50 more rows disparities(fit, races=c(\"white\", \"black\")) #> # A tibble: 4 × 6 #>   race_1 race_2 turnout estimate_1 estimate_2 disparity #>   <chr>  <chr>  <chr>        <dbl>      <dbl>     <dbl> #> 1 black  white  no           0.358      0.301    0.0573 #> 2 black  white  yes          0.642      0.699   -0.0573 #> 3 white  black  no           0.301      0.358   -0.0573 #> 4 white  black  yes          0.699      0.642    0.0573"},{"path":"http://corymccartan.com/birdie/reference/est_weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Weighted Estimate of Outcomes By Race — est_weighted","title":"Calculate Weighted Estimate of Outcomes By Race — est_weighted","text":"Calculates \"standard\" weighted estimator conditional distributions outcome variable \\(Y\\) race \\(R\\), using BISG probabilities.  estimator, commonly used, appropriate \\(Y \\perp R \\mid X, S\\), \\(S\\) \\(X\\) last names covariates (possibly including geography) used making BISG probabilities. cases assumption plausible birdie() used instead. See references discussion selecting right estimator.","code":""},{"path":"http://corymccartan.com/birdie/reference/est_weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Weighted Estimate of Outcomes By Race — est_weighted","text":"","code":"est_weighted(r_probs, formula, data = NULL, prefix = \"pr_\", se_boot = 0)  # S3 method for est_weighted print(x, ...)  # S3 method for est_weighted summary(object, ...)"},{"path":"http://corymccartan.com/birdie/reference/est_weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Weighted Estimate of Outcomes By Race — est_weighted","text":"r_probs data frame matrix BISG probabilities, one row per individual. output bisg() can used directly . formula two-sided formula object describing estimator structure. left-hand side outcome variable, must discrete. Subgroups calculate estimates may specified adding covariates right-hand side. Subgroup estimates available coef(..., subgroup=TRUE) tidy(..., subgroup=TRUE). data optional data frame containing variables named formula. prefix r_probs data frame, columns containing racial probabilities selected names starting prefix. default work output bisg(). se_boot number bootstrap replicates use compute approximate standard errors esitmator. fewer 1,000 individuals 100 fewer replicates, Bayesian bootstrap used instead (.e., weights drawn \\(\\text{Dirichlet}(1, 1, ...,   1)\\) distribution, produces reliable estimates. ... Additional arguments generic methods (ignored). object, x object class est_weighted.","code":""},{"path":"http://corymccartan.com/birdie/reference/est_weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Weighted Estimate of Outcomes By Race — est_weighted","text":"object class est_weighted, inheriting birdie, many methods available. model estimates may accessed coef().","code":""},{"path":"http://corymccartan.com/birdie/reference/est_weighted.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Calculate Weighted Estimate of Outcomes By Race — est_weighted","text":"print(est_weighted): Print summary model fit. summary(est_weighted): Print detailed summary model fit.","code":""},{"path":"http://corymccartan.com/birdie/reference/est_weighted.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Weighted Estimate of Outcomes By Race — est_weighted","text":"McCartan, C., Fisher, R., Goldin, J., Ho, D., & Imai, K. (2022). Estimating Racial Disparities Race Observed. Available https://arxiv.org/abs/.","code":""},{"path":"http://corymccartan.com/birdie/reference/est_weighted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Weighted Estimate of Outcomes By Race — est_weighted","text":"","code":"data(pseudo_vf)  r_probs = bisg(~ nm(last_name) + zip(zip), data=pseudo_vf)  # Process zip codes to remove missing values pseudo_vf$zip = proc_zip(pseudo_vf$zip)  est_weighted(r_probs, turnout ~ 1, data=pseudo_vf) #> Weighted estimator #> Formula: turnout ~ 1 #>    Data: pseudo_vf #> Number of obs: 5,000; groups: 1 #> Estimated distribution: #>     white black  hisp asian aian other #> no  0.315 0.335 0.357 0.468 0.53 0.329 #> yes 0.685 0.665 0.643 0.532 0.47 0.671  est = est_weighted(r_probs, turnout ~ zip, data=pseudo_vf) tidy(est, subgroup=TRUE) #> # A tibble: 7,416 × 4 #>    zip   turnout race  estimate #>    <chr> <chr>   <chr>    <dbl> #>  1 28748 no      white    0.276 #>  2 28748 yes     white    0.724 #>  3 28748 no      black    0.340 #>  4 28748 yes     black    0.660 #>  5 28748 no      hisp     0.147 #>  6 28748 yes     hisp     0.853 #>  7 28748 no      asian    0.284 #>  8 28748 yes     asian    0.716 #>  9 28748 no      aian     0.211 #> 10 28748 yes     aian     0.789 #> # … with 7,406 more rows"},{"path":"http://corymccartan.com/birdie/reference/p_r_natl.html","id":null,"dir":"Reference","previous_headings":"","what":"National Racial Demographics — p_r_natl","title":"National Racial Demographics — p_r_natl","text":"Returns proportion U.S. population six racial groups given year. Group definitions necessarily follow used Census Bureau surname tables: white: Non-Hispanic White alone black: Non-Hispanic Black alone hisp: Hispanic, race asian: Non-Hispanic Asian, Native Hawaiian, Pacific Islander alone aian: Non-Hispanic American Indian/Alaska Native : Non-Hispanic, two races, race","code":""},{"path":"http://corymccartan.com/birdie/reference/p_r_natl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"National Racial Demographics — p_r_natl","text":"","code":"p_r_natl(year = 2021, vap = FALSE)"},{"path":"http://corymccartan.com/birdie/reference/p_r_natl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"National Racial Demographics — p_r_natl","text":"year year return demographics . vap TRUE, return statistics voting-age population (18+) rather full U.S. population.","code":""},{"path":"http://corymccartan.com/birdie/reference/p_r_natl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"National Racial Demographics — p_r_natl","text":"named numeric vector length 6.","code":""},{"path":"http://corymccartan.com/birdie/reference/p_r_natl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"National Racial Demographics — p_r_natl","text":"","code":"p_r_natl(year=2010) #>       white       black        hisp       asian        aian       other  #> 0.637474968 0.122061191 0.163492546 0.048411064 0.007278155 0.021282076"},{"path":"http://corymccartan.com/birdie/reference/preproc.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess Last Names and Geographic Identifiers — preproc","title":"Preprocess Last Names and Geographic Identifiers — preproc","text":"functions called automatically bisg() may useful, especially geographic variables included birdie() model. proc_zip() proc_state() preprocess corresponding geographic identifiers. States partially matched state names abbreviations returned FIPS codes. ZIP codes crosswalked Census ZCTAs. Missing identifiers replaced \"<none>\". proc_name() processes last names accordance Census processing rules (https://www2.census.gov/topics/genealogy/2010surnames/surnames.pdf). Names converted Latin characters, capitalized, stripped prefixes suffixes, otherwise standardized.","code":""},{"path":"http://corymccartan.com/birdie/reference/preproc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess Last Names and Geographic Identifiers — preproc","text":"","code":"proc_zip(x)  proc_state(x)  proc_name(x, to_latin = TRUE)"},{"path":"http://corymccartan.com/birdie/reference/preproc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess Last Names and Geographic Identifiers — preproc","text":"x character vector names geographic identifiers process to_latin TRUE, convert names Latin characters . Strongly recommended non-Latin characters present, since match Census tables. However, conversion slightly time-consuming can disabled flag.","code":""},{"path":"http://corymccartan.com/birdie/reference/preproc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess Last Names and Geographic Identifiers — preproc","text":"processed character vector","code":""},{"path":"http://corymccartan.com/birdie/reference/preproc.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Preprocess Last Names and Geographic Identifiers — preproc","text":"proc_zip(): Match ZIP codes ZCTAs fill missing values. proc_state(): Match state names abbreviations fill missing values. proc_name(): Process names Census-standardized format.","code":""},{"path":"http://corymccartan.com/birdie/reference/preproc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess Last Names and Geographic Identifiers — preproc","text":"","code":"proc_name(\"Smith Jr.\") #> [1] \"SMITH\" proc_zip(\"00501\") #> [1] \"11742\" proc_state(\"Washington\") #> [1] \"53\""},{"path":"http://corymccartan.com/birdie/reference/pseudo_vf.html","id":null,"dir":"Reference","previous_headings":"","what":"A pseudo-voterfile — pseudo_vf","title":"A pseudo-voterfile — pseudo_vf","text":"dataset containing 5,000 fake voter records. Created randomizing subset North Carolina voter file. Turnout records completely randomly generated.","code":""},{"path":"http://corymccartan.com/birdie/reference/pseudo_vf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A pseudo-voterfile — pseudo_vf","text":"","code":"pseudo_vf"},{"path":"http://corymccartan.com/birdie/reference/pseudo_vf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A pseudo-voterfile — pseudo_vf","text":"data frame 5,000 rows 4 records: last_name Voter's last name zip 5-digit ZIP code. May NA race One \"white\", \"black\", \"hisp\", \"asian\", \"aian\", \"\" turnout 1 voter voted recent election, 0 otherwise","code":""},{"path":"http://corymccartan.com/birdie/reference/pseudo_vf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A pseudo-voterfile — pseudo_vf","text":"https://www.ncsbe.gov/results-data/voter-registration-data","code":""},{"path":"http://corymccartan.com/birdie/reference/pseudo_vf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A pseudo-voterfile — pseudo_vf","text":"","code":"data(pseudo_vf) print(pseudo_vf) #> # A tibble: 5,000 × 4 #>    last_name zip   race  turnout #>    <fct>     <fct> <fct> <fct>   #>  1 BEAVER    28748 white yes     #>  2 WILLIAMS  28144 black no      #>  3 ROSEN     28270 white yes     #>  4 SMITH     28677 black yes     #>  5 FAY       28748 white no      #>  6 CHURCH    28215 white yes     #>  7 JOHNSON   28212 black yes     #>  8 SZCZYGIEL NA    white yes     #>  9 SUMMERS   28152 black yes     #> 10 STARLING  28650 white yes     #> # … with 4,990 more rows"},{"path":"http://corymccartan.com/birdie/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, glance, tidy","code":""},{"path":"http://corymccartan.com/birdie/news/index.html","id":"birdie-030","dir":"Changelog","previous_headings":"","what":"birdie 0.3.0","title":"birdie 0.3.0","text":"New interfaces implementations BISG New computational backend interface BIRDiE models Updated documentation examples Unit tests accuracy usability","code":""},{"path":"http://corymccartan.com/birdie/news/index.html","id":"birdie-010","dir":"Changelog","previous_headings":"","what":"birdie 0.1.0","title":"birdie 0.1.0","text":"Basic BISG functionality initial model support","code":""}]
